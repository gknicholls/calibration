
%Script computing recalibration curve c_y(alpha) for Section 5.
%loads output from runcal.m 

%%
%this is the output from the actual run reported in the paper, 
%generated by running runcal.m
load ExactFreApproxCylIce

%see runcal.m for details of the variables and their values... a few are
%rho=0.5 is threshold KS-distance
%th is a vector of nt=1000 equally spaced theta-values from 0 to 2
%alpha (ie alp) here is 1-alpha in paper.

%%
%postQF is the quantile function of the approximate posterior G_y
%ct is c_y(alpha) in the paper, given as a weighted average of step
%functions
alp=linspace(0,1,nt);
postQF=zeros(size(th)); postQF(1)=th(1); postQF(end)=th(end);
ct=zeros(size(alp));

afl=exp(-lkdi+max(lkdi));
K=sum(di<=rho);


%%

%this is essentially algorithm 4 in the paper - only diff is the
%simulations are all pre-run sdat(s) is s(y^{(i)}) is the scalar
%sufficient statistic, S here is M from paper, number of (phi,y') pairs.
for (s=1:S)
  if (di(s)<=rho)
    post=normpost(sdat(s),th,M,M,numeC);
    postCDF=cumsum(post)*(th(2)-th(1));
    for (i=2:(nt-1)) 
      postQF(i)=th(min(find(postCDF>=1-alp(i)))); %quantile function
    end
    ca=(postQF<=phi(s));
    wt=afl(s)./sum(fl);
    ct=ct+wt*ca;
  end
end

%%
%produce recalibration figure in Ising section 4 of paper

plot(1-alp,1-ct,'k-',[0,1],[0,1],'k--')
ylim([0,1]);
FS=18;
xlabel('Nominal coverage $\alpha$','interpreter','latex','FontSize',FS); 
ylabel('Estimated coverage $\hat c_y(\alpha)$','interpreter','latex','FontSize',FS)
ax=gca;
ax.FontSize=18;

%
[junk,i]=min(abs(alp-0.05));
ct(i)   %1-coverage you got
alp(i)  %1-coverage you wanted
hold on;
p1=[0.95,0]; p2=[0.95,1-ct(i)];
p3=[0,1-ct(i)]
arrow(p1,p2,'Length',10); arrow(p2,p3,'Length',10)
%
[junk,j]=min(abs(ct-0.05));
ct(j)  %1-coverage you would get if you had targeted
alp(j) %1-this adjusted nominal coverage 
p1=[0,0.95]; p2=[1-alp(j),0.95];
p3=[1-alp(j),0];
arrow(p1,p2,'color','red','Length',10); arrow(p2,p3,'color','red','Length',10)

text('string','$\hat c_y(0.95)$','interpreter','latex','pos',[0.03 0.76],'FontSize',18)
text('string','$0.95=\hat c_y(\tilde\alpha)$','interpreter','latex','pos',[0.03 0.89],'color','red','FontSize',18)
text('string','$\tilde\alpha$','interpreter','latex','pos',[0.95 -0.04],'color','red','FontSize',18)
hold off

set(gcf, 'PaperUnits', 'normalized')
set(gcf, 'PaperPosition', [0 0 1 1])
print(gcf,'recal','-dpdf')
